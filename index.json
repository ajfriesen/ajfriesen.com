[{"authors":["admin"],"categories":null,"content":"I am living and working in Cologne (Germany) as a Systems Architect. At work I am creating high available infrastructure with technologies like Kubernetes, AWS, Terraform and a lot more.\nWhen not working I am using my free time to learn Golang which is powering all these awesome tools.\nYou can find me on several local (Cologne) Meetup groups:\n  Golang Colgone/Bonn  Kubernetes Meetup Cologne  Cologne AWS User Group #AWSUGCGN   Mid term career goal:\nI really like the context of infrastructure and automation. I am already using modern tools and the tools are more often written in Go. That is also my personal next objective, to learn Go and using the language in a professional way. Also I am really interested in working remote in a remote-first company.\nIf you have something meeting these requirements feel free to contact me.\n  ","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1586902743,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://www.ajfriesen.com/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"authors","summary":"I am living and working in Cologne (Germany) as a Systems Architect. At work I am creating high available infrastructure with technologies like Kubernetes, AWS, Terraform and a lot more.\nWhen not working I am using my free time to learn Golang which is powering all these awesome tools.\nYou can find me on several local (Cologne) Meetup groups:\n  Golang Colgone/Bonn  Kubernetes Meetup Cologne  Cologne AWS User Group #AWSUGCGN   Mid term career goal:","tags":null,"title":"Andrej Friesen","type":"authors"},{"authors":null,"categories":null,"content":"I have worked with Kubernetes the last 2 years on AWS with Rancher2 and just want to jot down some notes. Kubernetes is not the only thing you need. It is a whole ecosystem of tools.\nI would have found this kind of resource helpful when I started so maybe this will be to you.\nMy experience is based mostly on AWS and Rancher2 since at that time EKS was not around. So I will focus on the tools I know but maybe mention other alternatives.\nTopics I consider to write about:\n Rancher Helm Chartmuseum nginx-ingress controller cert-manager kube2iam Grafana prometheus alertmanager cloudwatch-exporter fluentd-cloudwatch kube-state metrics metric-server Tools (kubens \u0026amp; kubectx, kubetail) Docker  ","date":1586779200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1586902743,"objectID":"4230dfaf9ccc0f3696361b4bf12ca014","permalink":"https://www.ajfriesen.com/project/notes-about-kubernetes-in-production/","publishdate":"2020-04-13T12:00:00Z","relpermalink":"/project/notes-about-kubernetes-in-production/","section":"project","summary":"Just a collection of notes and tools I have come across","tags":["Kubernetes","AWS","Rancher"],"title":"Notes about Kubernetes in Production","type":"project"},{"authors":["Andrej Friesen"],"categories":[],"content":"Table of Contents  Rancher rke - Rancher Kubernetes Engine Rancher2 Rancher Management Cluster and User Cluster Example Rancher vocabulary  Cloud Credentials Node Templates Kubernetes Cluster with Node Pools   Rancher Terraform Provider RKE Terraform Provider   Rancher Rancher is a Kubernetes distribution build by Rancher Labs. There are some others like OpenShift from Red Hat with different features.\nThe distribution will run Kubernetes in an opinionated way so you do not have to think of every detail.\nExample:\nKubernetes does not come with a user management system. You could implement this your own or just pick a distribution which has done all the work for you. Rancher comes with different authentication providers like Github, Azure AD and others. It is baked in. Just configure the authentication in Rancher, OpenShift or your Kubernetes distribution of choice and that is it.\nSince it is opinionated it may not fit your use case. Maybe you just need to dig a little deeper into the configuration options that depends on your needs.\nFeatures Rancher will give you:\n User management, since Kubernetes does not have user management backed in A neat web interface to browse your clusters (yes, I mean several clusters!) Provision to major cloud providers (AWS, Google, Azure), bare metal, vmware vSphere etc. Kubernetes Cluster backups, upgrades, etc One place to manage a lot  Listing all features of Rancher does not make sense here.\nI just want you to know, that all lot is taken care of and that is the real reason to choose a Kubernetes distribution. This is basic and important stuff which you would need to implement by yourself. Pick your flavor and go with it like Linux distributions ðŸ˜‰.\nrke - Rancher Kubernetes Engine Rancher2 is the shiny web interface and API everybody talks about. rke is the Kuerbetes installer which you use to create Kubernetes clusters with when using Rancher.\nIt is rke which does the magic in Rancher. Rancher is packed with a certain version of rke. If you just want a Kubernetes Cluster to play with you can use several tools like:\n  kops  kubeadm  kubicorn  minikube  rke (Rancher Kubernetes Engine)  rke is just another method to install and maintain you Kubernetes cluster in the rancher opinionated way. There are a lot of configuration options. Check the rancher rke docs for more information.\nrke will give you a Kubernetes cluster to work with but not the rancher web interface! This is somewhat confusing, when you just start.\nYou can always see which Rancher version uses which rke version and therefore the support of the Kubernetes version in the rancher/rancher repo\nHere you can see that rancher v2.2.11 uses rke v0.2.10 and supports up to these Kubernetres version:\n 1.13.12 1.14.10 1.15.11  A good overview for support and all the versions about rancher can be found in their docs: Rancher Support Matrix\nRancher2 Rancher itself is the Rancher API and web interface which you often see on the internet when someone is referring to Rancher.\nRancher will run on top of your Kubernetes cluster created by rke. You can deploy rancher via helm to that first rke cluster you created.\nHere is the Rancher Helm Chart and the according documentation on the rancher website Install Rancher on the Kubernete Cluster\nSo now you have a Kubernetes cluster with the rancher 2 helm chart deployed on to. This Cluster should not be used as a Cluster for workloads. Since Rancher comes with rke you can now deploy as many cluster as you like to what location you like.\nRancher Management Cluster and User Cluster Example Rancher/rke will not take care of your general AWS infrastructure like networking. This needs to be taken care of by yourself. I would recommend to go with terraform but AWS Cloudformation and the AWS Console will work as well.\nThe first thing you need is a network and nodes to install a Kubernetes cluster with rke. It would look like Figure 1:\n Example Rancher VPC Setup   There is a lot missing like Internet Gateways, NAT Gateways, routing tables, routes and you could use an Application LoadBalancer instead the Network LoadBalancer. But you get the idea.\nNext you would need to install Rancher to that Kubernetes cluster which is running on the 3 Rancher nodes. After some DNS configuration and certificates management you have a Rancher 2 web interface and API ready to go.\nEasy right? Yeah I know it is a lot of work. So letÂ´s go on.\nNow you can use the Rancher2 web interface to create your cluster right?\nWrong!\nWe first need another VPC to deploy the Rancher user cluster into. It is mostly the same setup as before but you need a VPC Perring (VPC Gateway is also possible) and you do not need to place EC2 nodes into the cluster. That will be taken care of Rancher.\n  Example Rancher VPC Setup with User Cluster   Why do you need the peering? Rancher will ssh into each node and will do the provisioning for each Kubernetes node. Also the created Kubernetes cluster will ping back to Rancher for health checks.\nRancher vocabulary To create the actual user cluster you need to know how Rancher will create those. For that I will explain briefly what Rancher resources you need for the user cluster:\n   Word Description     rke rancher kubernetes engine. A tKubernetes installer in the rancher way.   rancher Rancher API and web interface..   Cloud Credentials Credentials to your provider (AWS, Google, Azure, etc.).   Node Templates Definition of Node. Networking, Instance Type, Image, etc.   Node Pool Mapping between Node Role and Node Template when creating a User Cluster.   Node Role Worker, etcd and Control Plane roles for Kubernetes   User Cluster The Cluster created for your actual workload     Cloud Credentials Cloud Credentials is just an AWS Access Key and Access Secret.\nDo not use your user bound AWS credentials!\nWhat will happen, when you deploy your Kubernetes Cluster with the credentials from a user and they leave the company?\n You will deactivate the AWS account because of offboarding Suddenly the cluster does not have proper credentials to interact with the AWS API anymore Finding out will take you some time and can have bad effects like nodes not coming up in AWS  Why do I know that? It is called experience ;-)\nNode Templates Node Templates are just what it says. You define values like:\n VPC subnet EC2 instance type AMI ssh user etc.  As you can see you need a Node Template for every availability zone since subnet in a AWS VPC are bound to an availability zone.\nYou also can use different EC2 instance types for Kubernetes Worker and etc and control plane.\nIf you are testing out the provisioning and you encounter errors, check that the instance itself is not too small. I did run into it myself and could not figure out what was wrong. Increasing the EC2 instance type to a more performant machine did resolve that issue.\nKubernetes Cluster with Node Pools A Kubernetes cluster in Rancher is made of Node Pools. The Node Pool is just a mapping between the Node Templates and the role in the cluster.\nThe role can be one of the following:\n Worker (will run you workload) etcd (Database for Kubernetes) control Plane (Kubernetes API)  Then you can configure the cluster itself with the right Cloud Provider. This will allow you to use the serviceType LoadBalancer and AWS or other vendors will spawn a LoadBalancer for your particular service.\nAlso you can configure your network driver, snapshots and much more\nRancher Terraform Provider Rancher Labs is also providing an official Rancher2 Terraform Provider. You can create most resources specific to Rancher with that provider. Now you can automate everything with terraform. From creating the network in AWS up to the cluster in Rancher.\nRancher2 Terraform Provider on the Terraform Website:\nhttps://www.terraform.io/docs/providers/rancher2/index.html\nRancher2 terraform Provider source at Github :\nhttps://github.com/terraform-providers/terraform-provider-rancher2\nRKE Terraform Provider There was a terraform provider made by Kazumichi Yamamoto which I have used in version v0.14.1 to automate the creation of the rancher management cluster. But I think Rancher has taken over the development of that project and the repository moved to the rancher organization.\nhttps://github.com/rancher/terraform-provider-rke\nRancher Labs is pretty fast in developing these tools. It will take some time and then the terraform rke provider will move to the official terraform providers organization.\nUntil then you have to download the provider by yourself at rancher(terraform-provider-rke. Only official HashiCorp providers listed here in the terraform-providers github organization will be downloaded for you when running terraform init.\n","date":1586774804,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1586902743,"objectID":"a518db00a9b347463c84a1f162af961a","permalink":"https://www.ajfriesen.com/post/rancher-overview/","publishdate":"2020-04-13T12:46:44+02:00","relpermalink":"/post/rancher-overview/","section":"post","summary":"A brief introduction into Rancher, rke and explaination of Rancher specific terms with. Also directing you to the right resources. Based on my experience running Rancher Management Cluster and Rancher User Cluster on AWS EC2.","tags":["kubernetes","rancher","aws","terraform"],"title":"Rancher Overview","type":"post"},{"authors":["Andrej Friesen"],"categories":[],"content":"I am running arch Linux on my server with LUKS disc encryption. I do need to type in my password every time I reboot the machine. Sometimes I have a typo and this happens:\nWelcome to GRUB! Attempting to decrypt master key... Enter passphrase for hd1,gpt2 (\u0026lt;disk uuid\u0026gt;): error: access denied error: no such cryptodisk found. error: disk `cryptouuid/\u0026lt;disk uuid\u0026gt;` not found. Entering rescue mode...  Since with IPMI I do not need to attach a VGA cable and keyboard to my server but still the grub rescue console is something I am not familiar with and need to deal with.\nYou can mount the partition with cryptomount:1\ncryptomount (hd1,gpt2)  Enter your password.\nThen load the module for a normal boot\ninsmod normal  Boot:\nnormal  Now you should get forwarded to the grub boot manager as you typed the password correct the first time.\n   cryptomount \u0026#x21a9;\u0026#xfe0e;\n   ","date":1586733975,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1586902743,"objectID":"5e0d1067bde41ef0e75c13f469282e48","permalink":"https://www.ajfriesen.com/post/decrypt-and-mount-luks-volume-in-grub-rescue-mode/","publishdate":"2020-04-13T01:26:15+02:00","relpermalink":"/post/decrypt-and-mount-luks-volume-in-grub-rescue-mode/","section":"post","summary":"I am running arch Linux on my server with LUKS disc encryption. I do need to type in my password every time I reboot the machine. Sometimes I have a typo and this happens:\nWelcome to GRUB! Attempting to decrypt master key... Enter passphrase for hd1,gpt2 (\u0026lt;disk uuid\u0026gt;): error: access denied error: no such cryptodisk found. error: disk `cryptouuid/\u0026lt;disk uuid\u0026gt;` not found. Entering rescue mode...  Since with IPMI I do not need to attach a VGA cable and keyboard to my server but still the grub rescue console is something I am not familiar with and need to deal with.","tags":["grub","luks"],"title":"Decrypt and Mount LUKS Volume in Grub Rescue Mode","type":"post"},{"authors":null,"categories":null,"content":"","date":1546300800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1586902743,"objectID":"1f4cb24553577f6808a73065326a8b9d","permalink":"https://www.ajfriesen.com/blog/","publishdate":"2019-01-01T00:00:00Z","relpermalink":"/blog/","section":"","summary":"Hello!","tags":null,"title":"Blog","type":"widget_page"}]